function [] = test1()
% Projekt 1, Zadanie 23
% Wiktor Murawski, 333255
%
% Funkcja testująca poprawność zaimplementowanej metody
% Funkcja testuje metodę na kilku funkcjach dwóch zmiennych stopnia <= 1
% Funkcja podaje wynik dokładny uzyskany za pomocą Symbolic Math Toolbox
% oraz wyniki uzyskane zaimplementowaną metodą dla n = 1, n = 10, n = 100

% Testowane funkcje
functions = {
  @(x,y) 0;
  @(x,y) x+y;
  @(x,y) 1;
  @(x,y) x + y + 1;
  @(x,y) 3.14*x + 2.72*y + 1.62;
  @(x,y) 0.05*x + 0.01*y + pi;
};
N = numel(functions);

functionNames = strings(N,1);
exactValues = zeros(N,1);
n1 = zeros(N,1);
n10 = zeros(N,1);
n100 = zeros(N,1);

for i = 1:N
  f = functions{i};
  cleanName = regexprep(func2str(f), '@\([^\)]*\)*', '');
  %functionNames(i) = "f(x,y)="+cleanName;
  functionNames(i) = cleanName;
  exactValues(i) = ExactIntegralValue(f);
  n1(i) = P1Z23_WMU_DoubleIntegralOnSquare(f,1);
  n10(i) = P1Z23_WMU_DoubleIntegralOnSquare(f,10);
  n100(i) = P1Z23_WMU_DoubleIntegralOnSquare(f,100);
end

err1 = abs(exactValues-n1);
err10 = abs(exactValues-n10);
err100 = abs(exactValues-n100);


% Wyświetlanie tabeli
T = table(functionNames, exactValues, n1(:), n10(:), n100(:), ...
    'VariableNames', {'Funkcja', 'Wynik dokładny', 'n = 1', 'n = 10', 'n = 100'});

T.Funkcja = cellstr(T.Funkcja);

% Display the table
%writetable(T, 'output.txt', 'WriteRowNames', true, 'QuoteStrings', false);

% Loop through each row and display the columns without quotes in the 'Strings' column
width = 75;
fprintf("%-20s|%12s|%12s|%12s|%12s|\n", ...
  "Funkcja","Wynik","n=1","n=10","n=100")
for j = 1:width-2
  fprintf("-")
end
fprintf("\n")
for i = 1:N
    % Display the row with the 'Strings' value without quotes
    fprintf("%-20s|%12g|%12g|%12g|%12g|\n", ...
      "f(x,y) = ",exactValues(i),n1(i),n10(i),n100(i));
    fprintf("%-20s|%12g|%12g|%12g|%12g|\n", ...
      functionNames(i),'',err1(i),err10(i),err100(i));
    for j = 1:width-2
      fprintf("-")
    end
    fprintf("\n")
end


end